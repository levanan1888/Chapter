<?php

/**
 * Email Service
 * 
 * X·ª≠ l√Ω g·ª≠i email trong h·ªá th·ªëng
 * 
 * @package    App
 * @subpackage Service
 */
class Service_Email
{
    /**
     * C·∫•u h√¨nh email
     * 
     * @var array
     */
    protected $config;

    /**
     * Constructor
     * 
     * @return void
     */
    public function __construct()
    {
        $this->config = Config::load('email');
    }

    /**
     * G·ª≠i email ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u
     * 
     * @param string $email Email ng∆∞·ªùi nh·∫≠n
     * @param string $token Token ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u
     * @param string $username T√™n ng∆∞·ªùi d√πng
     * @return bool
     */
    public function send_password_reset($email, $token, $username = '')
    {
        try {
            $subject = 'M√£ x√°c th·ª±c ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u - ComicHub';
            $message = $this->get_password_reset_template($username, $token);
            
            return $this->send_email($email, $subject, $message);
        } catch (\Exception $e) {
            \Log::error('Failed to send password reset email: ' . $e->getMessage());
            return false;
        }
    }

    /**
     * G·ª≠i email th√¥ng b√°o ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u th√†nh c√¥ng
     * 
     * @param string $email Email ng∆∞·ªùi nh·∫≠n
     * @param string $username T√™n ng∆∞·ªùi d√πng
     * @return bool
     */
    public function send_password_reset_success($email, $username = '')
    {
        try {
            $subject = 'M·∫≠t kh·∫©u ƒë√£ ƒë∆∞·ª£c ƒë·∫∑t l·∫°i th√†nh c√¥ng - ComicHub';
            $message = $this->get_password_reset_success_template($username);
            
            return $this->send_email($email, $subject, $message);
        } catch (\Exception $e) {
            \Log::error('Failed to send password reset success email: ' . $e->getMessage());
            return false;
        }
    }

    /**
     * G·ª≠i email chung
     * 
     * @param string $to Email ng∆∞·ªùi nh·∫≠n
     * @param string $subject Ti√™u ƒë·ªÅ
     * @param string $message N·ªôi dung
     * @return bool
     */
    protected function send_email($to, $subject, $message)
    {
        try {
            // S·ª≠ d·ª•ng PHPMailer n·∫øu c√≥ c·∫•u h√¨nh SMTP
            if (isset($this->config['smtp_enabled']) && $this->config['smtp_enabled']) {
                return $this->send_via_smtp($to, $subject, $message);
            } else {
                // S·ª≠ d·ª•ng mail() function c·ªßa PHP
                return $this->send_via_php_mail($to, $subject, $message);
            }
        } catch (\Exception $e) {
            \Log::error('Failed to send email: ' . $e->getMessage());
            return false;
        }
    }

    /**
     * G·ª≠i email qua SMTP
     * 
     * @param string $to Email ng∆∞·ªùi nh·∫≠n
     * @param string $subject Ti√™u ƒë·ªÅ
     * @param string $message N·ªôi dung
     * @return bool
     */
    protected function send_via_smtp($to, $subject, $message)
    {
        try {
            $mail = new \PHPMailer\PHPMailer\PHPMailer(true);
            
            // C·∫•u h√¨nh SMTP
            $mail->isSMTP();
            $mail->Host = $this->config['smtp_host'];
            $mail->SMTPAuth = true;
            $mail->Username = $this->config['smtp_username'];
            $mail->Password = $this->config['smtp_password'];
            $mail->SMTPSecure = $this->config['smtp_encryption'];
            $mail->Port = $this->config['smtp_port'];
            $mail->CharSet = 'UTF-8';

            // Ng∆∞·ªùi g·ª≠i v√† ng∆∞·ªùi nh·∫≠n
            $mail->setFrom($this->config['from_email'], $this->config['from_name']);
            $mail->addAddress($to);

            // N·ªôi dung email
            $mail->isHTML(true);
            $mail->Subject = $subject;
            $mail->Body = $message;

            return $mail->send();
        } catch (\Exception $e) {
            \Log::error('SMTP email failed: ' . $e->getMessage());
            return false;
        }
    }

    /**
     * G·ª≠i email qua PHP mail()
     * 
     * @param string $to Email ng∆∞·ªùi nh·∫≠n
     * @param string $subject Ti√™u ƒë·ªÅ
     * @param string $message N·ªôi dung
     * @return bool
     */
    protected function send_via_php_mail($to, $subject, $message)
    {
        try {
            $headers = array(
                'MIME-Version: 1.0',
                'Content-type: text/html; charset=UTF-8',
                'From: ' . $this->config['from_name'] . ' <' . $this->config['from_email'] . '>',
                'Reply-To: ' . $this->config['from_email'],
                'X-Mailer: PHP/' . phpversion()
            );

            return mail($to, $subject, $message, implode("\r\n", $headers));
        } catch (\Exception $e) {
            \Log::error('PHP mail() failed: ' . $e->getMessage());
            return false;
        }
    }

    /**
     * Template email ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u
     * 
     * @param string $username T√™n ng∆∞·ªùi d√πng
     * @param string $token Token
     * @return string
     */
    protected function get_password_reset_template($username, $token)
    {
        $display_name = !empty($username) ? $username : 'B·∫°n';
        
        return '
        <!DOCTYPE html>
        <html>
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u - ComicHub</title>
            <style>
                body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
                .container { max-width: 600px; margin: 0 auto; padding: 20px; }
                .header { background: #007bff; color: white; padding: 20px; text-align: center; border-radius: 8px 8px 0 0; }
                .content { background: #f8f9fa; padding: 30px; border-radius: 0 0 8px 8px; }
                .button { display: inline-block; background: #007bff; color: white; padding: 12px 24px; text-decoration: none; border-radius: 4px; margin: 20px 0; }
                .code { background: #e9ecef; padding: 15px; border-radius: 4px; font-family: monospace; font-size: 18px; text-align: center; margin: 20px 0; letter-spacing: 2px; }
                .footer { text-align: center; margin-top: 30px; color: #666; font-size: 14px; }
            </style>
        </head>
        <body>
            <div class="container">
                <div class="header">
                    <h1>üîê ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u</h1>
                </div>
                <div class="content">
                    <h2>Xin ch√†o ' . htmlspecialchars($display_name) . '!</h2>
                    <p>Ch√∫ng t√¥i nh·∫≠n ƒë∆∞·ª£c y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u cho t√†i kho·∫£n c·ªßa b·∫°n t·∫°i ComicHub.</p>
                    
                    <p><strong>M√£ x√°c th·ª±c c·ªßa b·∫°n l√†:</strong></p>
                    <div class="code">' . htmlspecialchars($token) . '</div>
                    
                    <p>Vui l√≤ng quay l·∫°i trang web v√† nh·∫≠p m√£ x√°c th·ª±c n√†y ƒë·ªÉ ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u c·ªßa b·∫°n.</p>
                    
                    <p><strong>L∆∞u √Ω quan tr·ªçng:</strong></p>
                    <ul>
                        <li>M√£ x√°c th·ª±c n√†y ch·ªâ c√≥ hi·ªáu l·ª±c trong <strong>1 gi·ªù</strong></li>
                        <li>N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u, vui l√≤ng b·ªè qua email n√†y</li>
                        <li>ƒê·ªÉ b·∫£o m·∫≠t, kh√¥ng chia s·∫ª m√£ x√°c th·ª±c v·ªõi b·∫•t k·ª≥ ai</li>
                    </ul>
                </div>
                <div class="footer">
                    <p>Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông t·ª´ h·ªá th·ªëng ComicHub</p>
                    <p>N·∫øu c√≥ th·∫Øc m·∫Øc, vui l√≤ng li√™n h·ªá: support@comichub.com</p>
                </div>
            </div>
        </body>
        </html>';
    }

    /**
     * Template email ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u th√†nh c√¥ng
     * 
     * @param string $username T√™n ng∆∞·ªùi d√πng
     * @return string
     */
    protected function get_password_reset_success_template($username)
    {
        $display_name = !empty($username) ? $username : 'B·∫°n';
        
        return '
        <!DOCTYPE html>
        <html>
        <head>
            <meta charset="UTF-8">
            <title>M·∫≠t kh·∫©u ƒë√£ ƒë∆∞·ª£c ƒë·∫∑t l·∫°i - ComicHub</title>
            <style>
                body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
                .container { max-width: 600px; margin: 0 auto; padding: 20px; }
                .header { background: #28a745; color: white; padding: 20px; text-align: center; border-radius: 8px 8px 0 0; }
                .content { background: #f8f9fa; padding: 30px; border-radius: 0 0 8px 8px; }
                .footer { text-align: center; margin-top: 30px; color: #666; font-size: 14px; }
            </style>
        </head>
        <body>
            <div class="container">
                <div class="header">
                    <h1>‚úÖ M·∫≠t kh·∫©u ƒë√£ ƒë∆∞·ª£c ƒë·∫∑t l·∫°i th√†nh c√¥ng</h1>
                </div>
                <div class="content">
                    <h2>Xin ch√†o ' . htmlspecialchars($display_name) . '!</h2>
                    <p>M·∫≠t kh·∫©u c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c ƒë·∫∑t l·∫°i th√†nh c√¥ng.</p>
                    
                    <p><strong>Th√¥ng tin t√†i kho·∫£n:</strong></p>
                    <ul>
                        <li>M·∫≠t kh·∫©u m·ªõi ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t</li>
                        <li>B·∫°n c√≥ th·ªÉ ƒëƒÉng nh·∫≠p v·ªõi m·∫≠t kh·∫©u m·ªõi ngay b√¢y gi·ªù</li>
                    </ul>
                    
                    <p>N·∫øu b·∫°n kh√¥ng th·ª±c hi·ªán thay ƒë·ªïi n√†y, vui l√≤ng li√™n h·ªá v·ªõi ch√∫ng t√¥i ngay l·∫≠p t·ª©c.</p>
                </div>
                <div class="footer">
                    <p>Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông t·ª´ h·ªá th·ªëng ComicHub</p>
                    <p>N·∫øu c√≥ th·∫Øc m·∫Øc, vui l√≤ng li√™n h·ªá: support@comichub.com</p>
                </div>
            </div>
        </body>
        </html>';
    }
}
